def quick_sort(arr, low, high):
    if low < high:
        pi = partition(arr, low, high)
        quick_sort(arr, low, pi - 1)
        quick_sort(arr, pi + 1, high)

def partition(arr, low, high):
    pivot = arr[high]
    i = low - 1
    for j in range(low, high):
        if arr[j] <= pivot:
            i += 1
            arr[i], arr[j] = arr[j], arr[i]
    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return i + 1

# Test cases
arr1 = [10, 7, 8, 9, 1, 5]
arr2 = [1, 5, 2, 8, 9, 3]
arr3 = [5, 4, 3, 2, 1]

n1 = len(arr1)
n2 = len(arr2)
n3 = len(arr3)

quick_sort(arr1, 0, n1 - 1)
quick_sort(arr2, 0, n2 - 1)
quick_sort(arr3, 0, n3 - 1)

print("Sorted array1:", arr1)
print("Sorted array2:", arr2)
print("Sorted array3:", arr3)
